version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing Node.js dependencies...
      - npm install
      - npm install express

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 430118853571.dkr.ecr.ap-south-1.amazonaws.com
      - echo  $REPOSITORY_URI
      - export COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG=${COMMIT_HASH:=latest}
      - export ECS_CLUSTER_NAME="Node-Cluster"
      - export ECS_SERVICE_NAME="test-service"
      - export ECS_TASK_DEFINITION="test-task:1"

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t my-node-app:latest .
      - echo "Listing built Docker images..."
      - docker images  # Show all images
      - docker tag my-node-app:latest $REPOSITORY_URI:latest
      - docker tag my-node-app:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo "Tagged images:"
      - docker images | grep sample-node-app  # Show tagged images

  post_build:
    commands:
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image details to output file...
      - echo Writing image definitions file...
      - printf '[{"name":"ecs_service_name","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo ECS_CLUSTER_NAME - $ECS_CLUSTER_NAME, ECS_SERVICE_NAME - $ECS_SERVICE_NAME
      - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --task-definition $ECS_TASK_DEFINITION --force-new-deployment --enable-execute-command
      - echo ECS service $ECS_SERVICE_NAME updated
      
artifacts:
  files: imagedefinitions.json

